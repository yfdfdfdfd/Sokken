/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionCreateChild } from './QuestionCreateChild';
import {
    QuestionCreateChildFromJSON,
    QuestionCreateChildFromJSONTyped,
    QuestionCreateChildToJSON,
    QuestionCreateChildToJSONTyped,
} from './QuestionCreateChild';

/**
 * 
 * @export
 * @interface UserAnswerCreate
 */
export interface UserAnswerCreate {
    /**
     * ユーザーID
     * @type {number}
     * @memberof UserAnswerCreate
     */
    userId: number;
    /**
     * 回答情報
     * @type {Array<QuestionCreateChild>}
     * @memberof UserAnswerCreate
     */
    child: Array<QuestionCreateChild>;
}

/**
 * Check if a given object implements the UserAnswerCreate interface.
 */
export function instanceOfUserAnswerCreate(value: object): value is UserAnswerCreate {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('child' in value) || value['child'] === undefined) return false;
    return true;
}

export function UserAnswerCreateFromJSON(json: any): UserAnswerCreate {
    return UserAnswerCreateFromJSONTyped(json, false);
}

export function UserAnswerCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAnswerCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'child': ((json['child'] as Array<any>).map(QuestionCreateChildFromJSON)),
    };
}

  export function UserAnswerCreateToJSON(json: any): UserAnswerCreate {
      return UserAnswerCreateToJSONTyped(json, false);
  }

  export function UserAnswerCreateToJSONTyped(value?: UserAnswerCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'child': ((value['child'] as Array<any>).map(QuestionCreateChildToJSON)),
    };
}

