/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserAnswer
 */
export interface UserAnswer {
    /**
     * 
     * @type {number}
     * @memberof UserAnswer
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UserAnswer
     */
    userId: number;
    /**
     * 
     * @type {number}
     * @memberof UserAnswer
     */
    questionId: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserAnswer
     */
    isCorrect: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserAnswer
     */
    quizeListUuid: string;
    /**
     * 
     * @type {Date}
     * @memberof UserAnswer
     */
    answeredAt: Date;
}

/**
 * Check if a given object implements the UserAnswer interface.
 */
export function instanceOfUserAnswer(value: object): value is UserAnswer {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('questionId' in value) || value['questionId'] === undefined) return false;
    if (!('isCorrect' in value) || value['isCorrect'] === undefined) return false;
    if (!('quizeListUuid' in value) || value['quizeListUuid'] === undefined) return false;
    if (!('answeredAt' in value) || value['answeredAt'] === undefined) return false;
    return true;
}

export function UserAnswerFromJSON(json: any): UserAnswer {
    return UserAnswerFromJSONTyped(json, false);
}

export function UserAnswerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAnswer {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['user_id'],
        'questionId': json['question_id'],
        'isCorrect': json['is_correct'],
        'quizeListUuid': json['quize_list_uuid'],
        'answeredAt': (new Date(json['answered_at'])),
    };
}

  export function UserAnswerToJSON(json: any): UserAnswer {
      return UserAnswerToJSONTyped(json, false);
  }

  export function UserAnswerToJSONTyped(value?: UserAnswer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'question_id': value['questionId'],
        'is_correct': value['isCorrect'],
        'quize_list_uuid': value['quizeListUuid'],
        'answered_at': ((value['answeredAt']).toISOString()),
    };
}

